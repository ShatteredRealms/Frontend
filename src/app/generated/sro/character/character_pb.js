// source: sro/character/character.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var sro_globals_pb = require('../../sro/globals_pb.js');
goog.object.extend(proto, sro_globals_pb);
var sro_gamebackend_servermanager_pb = require('../../sro/gamebackend/servermanager_pb.js');
goog.object.extend(proto, sro_gamebackend_servermanager_pb);
goog.exportSymbol('proto.sro.character.AddPlayTimeRequest', null, global);
goog.exportSymbol('proto.sro.character.CharacterDetails', null, global);
goog.exportSymbol('proto.sro.character.CharacterTarget', null, global);
goog.exportSymbol('proto.sro.character.CharacterTarget.TypeCase', null, global);
goog.exportSymbol('proto.sro.character.CharactersDetails', null, global);
goog.exportSymbol('proto.sro.character.CreateCharacterRequest', null, global);
goog.exportSymbol('proto.sro.character.EditCharacterRequest', null, global);
goog.exportSymbol('proto.sro.character.EditCharacterRequest.OptionalDimensionCase', null, global);
goog.exportSymbol('proto.sro.character.EditCharacterRequest.OptionalGenderCase', null, global);
goog.exportSymbol('proto.sro.character.EditCharacterRequest.OptionalLocationCase', null, global);
goog.exportSymbol('proto.sro.character.EditCharacterRequest.OptionalNewNameCase', null, global);
goog.exportSymbol('proto.sro.character.EditCharacterRequest.OptionalOwnerIdCase', null, global);
goog.exportSymbol('proto.sro.character.EditCharacterRequest.OptionalPlayTimeCase', null, global);
goog.exportSymbol('proto.sro.character.EditCharacterRequest.OptionalRealmCase', null, global);
goog.exportSymbol('proto.sro.character.Inventory', null, global);
goog.exportSymbol('proto.sro.character.InventoryItem', null, global);
goog.exportSymbol('proto.sro.character.PlayTimeResponse', null, global);
goog.exportSymbol('proto.sro.character.UpdateInventoryRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sro.character.PlayTimeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sro.character.PlayTimeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sro.character.PlayTimeResponse.displayName = 'proto.sro.character.PlayTimeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sro.character.AddPlayTimeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sro.character.AddPlayTimeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sro.character.AddPlayTimeRequest.displayName = 'proto.sro.character.AddPlayTimeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sro.character.CreateCharacterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sro.character.CreateCharacterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sro.character.CreateCharacterRequest.displayName = 'proto.sro.character.CreateCharacterRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sro.character.CharacterTarget = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sro.character.CharacterTarget.oneofGroups_);
};
goog.inherits(proto.sro.character.CharacterTarget, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sro.character.CharacterTarget.displayName = 'proto.sro.character.CharacterTarget';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sro.character.EditCharacterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sro.character.EditCharacterRequest.oneofGroups_);
};
goog.inherits(proto.sro.character.EditCharacterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sro.character.EditCharacterRequest.displayName = 'proto.sro.character.EditCharacterRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sro.character.CharacterDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sro.character.CharacterDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sro.character.CharacterDetails.displayName = 'proto.sro.character.CharacterDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sro.character.CharactersDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sro.character.CharactersDetails.repeatedFields_, null);
};
goog.inherits(proto.sro.character.CharactersDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sro.character.CharactersDetails.displayName = 'proto.sro.character.CharactersDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sro.character.InventoryItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sro.character.InventoryItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sro.character.InventoryItem.displayName = 'proto.sro.character.InventoryItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sro.character.Inventory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sro.character.Inventory.repeatedFields_, null);
};
goog.inherits(proto.sro.character.Inventory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sro.character.Inventory.displayName = 'proto.sro.character.Inventory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sro.character.UpdateInventoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sro.character.UpdateInventoryRequest.repeatedFields_, null);
};
goog.inherits(proto.sro.character.UpdateInventoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sro.character.UpdateInventoryRequest.displayName = 'proto.sro.character.UpdateInventoryRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sro.character.PlayTimeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sro.character.PlayTimeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sro.character.PlayTimeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.PlayTimeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sro.character.PlayTimeResponse}
 */
proto.sro.character.PlayTimeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sro.character.PlayTimeResponse;
  return proto.sro.character.PlayTimeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sro.character.PlayTimeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sro.character.PlayTimeResponse}
 */
proto.sro.character.PlayTimeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sro.character.PlayTimeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sro.character.PlayTimeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sro.character.PlayTimeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.PlayTimeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 time = 1;
 * @return {number}
 */
proto.sro.character.PlayTimeResponse.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sro.character.PlayTimeResponse} returns this
 */
proto.sro.character.PlayTimeResponse.prototype.setTime = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sro.character.AddPlayTimeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sro.character.AddPlayTimeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sro.character.AddPlayTimeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.AddPlayTimeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    character: (f = msg.getCharacter()) && proto.sro.character.CharacterTarget.toObject(includeInstance, f),
    time: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sro.character.AddPlayTimeRequest}
 */
proto.sro.character.AddPlayTimeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sro.character.AddPlayTimeRequest;
  return proto.sro.character.AddPlayTimeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sro.character.AddPlayTimeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sro.character.AddPlayTimeRequest}
 */
proto.sro.character.AddPlayTimeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sro.character.CharacterTarget;
      reader.readMessage(value,proto.sro.character.CharacterTarget.deserializeBinaryFromReader);
      msg.setCharacter(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sro.character.AddPlayTimeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sro.character.AddPlayTimeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sro.character.AddPlayTimeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.AddPlayTimeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCharacter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sro.character.CharacterTarget.serializeBinaryToWriter
    );
  }
  f = message.getTime();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional CharacterTarget character = 1;
 * @return {?proto.sro.character.CharacterTarget}
 */
proto.sro.character.AddPlayTimeRequest.prototype.getCharacter = function() {
  return /** @type{?proto.sro.character.CharacterTarget} */ (
    jspb.Message.getWrapperField(this, proto.sro.character.CharacterTarget, 1));
};


/**
 * @param {?proto.sro.character.CharacterTarget|undefined} value
 * @return {!proto.sro.character.AddPlayTimeRequest} returns this
*/
proto.sro.character.AddPlayTimeRequest.prototype.setCharacter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sro.character.AddPlayTimeRequest} returns this
 */
proto.sro.character.AddPlayTimeRequest.prototype.clearCharacter = function() {
  return this.setCharacter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sro.character.AddPlayTimeRequest.prototype.hasCharacter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 time = 2;
 * @return {number}
 */
proto.sro.character.AddPlayTimeRequest.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sro.character.AddPlayTimeRequest} returns this
 */
proto.sro.character.AddPlayTimeRequest.prototype.setTime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sro.character.CreateCharacterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sro.character.CreateCharacterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sro.character.CreateCharacterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.CreateCharacterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    owner: (f = msg.getOwner()) && sro_globals_pb.UserTarget.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 3, ""),
    realm: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dimension: (f = msg.getDimension()) && sro_gamebackend_servermanager_pb.DimensionTarget.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sro.character.CreateCharacterRequest}
 */
proto.sro.character.CreateCharacterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sro.character.CreateCharacterRequest;
  return proto.sro.character.CreateCharacterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sro.character.CreateCharacterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sro.character.CreateCharacterRequest}
 */
proto.sro.character.CreateCharacterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sro_globals_pb.UserTarget;
      reader.readMessage(value,sro_globals_pb.UserTarget.deserializeBinaryFromReader);
      msg.setOwner(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGender(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRealm(value);
      break;
    case 5:
      var value = new sro_gamebackend_servermanager_pb.DimensionTarget;
      reader.readMessage(value,sro_gamebackend_servermanager_pb.DimensionTarget.deserializeBinaryFromReader);
      msg.setDimension(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sro.character.CreateCharacterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sro.character.CreateCharacterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sro.character.CreateCharacterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.CreateCharacterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOwner();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sro_globals_pb.UserTarget.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGender();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRealm();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDimension();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      sro_gamebackend_servermanager_pb.DimensionTarget.serializeBinaryToWriter
    );
  }
};


/**
 * optional sro.UserTarget owner = 1;
 * @return {?proto.sro.UserTarget}
 */
proto.sro.character.CreateCharacterRequest.prototype.getOwner = function() {
  return /** @type{?proto.sro.UserTarget} */ (
    jspb.Message.getWrapperField(this, sro_globals_pb.UserTarget, 1));
};


/**
 * @param {?proto.sro.UserTarget|undefined} value
 * @return {!proto.sro.character.CreateCharacterRequest} returns this
*/
proto.sro.character.CreateCharacterRequest.prototype.setOwner = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sro.character.CreateCharacterRequest} returns this
 */
proto.sro.character.CreateCharacterRequest.prototype.clearOwner = function() {
  return this.setOwner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sro.character.CreateCharacterRequest.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.sro.character.CreateCharacterRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sro.character.CreateCharacterRequest} returns this
 */
proto.sro.character.CreateCharacterRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string gender = 3;
 * @return {string}
 */
proto.sro.character.CreateCharacterRequest.prototype.getGender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sro.character.CreateCharacterRequest} returns this
 */
proto.sro.character.CreateCharacterRequest.prototype.setGender = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string realm = 4;
 * @return {string}
 */
proto.sro.character.CreateCharacterRequest.prototype.getRealm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sro.character.CreateCharacterRequest} returns this
 */
proto.sro.character.CreateCharacterRequest.prototype.setRealm = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional sro.gamebackend.DimensionTarget dimension = 5;
 * @return {?proto.sro.gamebackend.DimensionTarget}
 */
proto.sro.character.CreateCharacterRequest.prototype.getDimension = function() {
  return /** @type{?proto.sro.gamebackend.DimensionTarget} */ (
    jspb.Message.getWrapperField(this, sro_gamebackend_servermanager_pb.DimensionTarget, 5));
};


/**
 * @param {?proto.sro.gamebackend.DimensionTarget|undefined} value
 * @return {!proto.sro.character.CreateCharacterRequest} returns this
*/
proto.sro.character.CreateCharacterRequest.prototype.setDimension = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sro.character.CreateCharacterRequest} returns this
 */
proto.sro.character.CreateCharacterRequest.prototype.clearDimension = function() {
  return this.setDimension(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sro.character.CreateCharacterRequest.prototype.hasDimension = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sro.character.CharacterTarget.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.sro.character.CharacterTarget.TypeCase = {
  TYPE_NOT_SET: 0,
  ID: 1,
  NAME: 2
};

/**
 * @return {proto.sro.character.CharacterTarget.TypeCase}
 */
proto.sro.character.CharacterTarget.prototype.getTypeCase = function() {
  return /** @type {proto.sro.character.CharacterTarget.TypeCase} */(jspb.Message.computeOneofCase(this, proto.sro.character.CharacterTarget.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sro.character.CharacterTarget.prototype.toObject = function(opt_includeInstance) {
  return proto.sro.character.CharacterTarget.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sro.character.CharacterTarget} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.CharacterTarget.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sro.character.CharacterTarget}
 */
proto.sro.character.CharacterTarget.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sro.character.CharacterTarget;
  return proto.sro.character.CharacterTarget.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sro.character.CharacterTarget} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sro.character.CharacterTarget}
 */
proto.sro.character.CharacterTarget.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sro.character.CharacterTarget.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sro.character.CharacterTarget.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sro.character.CharacterTarget} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.CharacterTarget.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.sro.character.CharacterTarget.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sro.character.CharacterTarget} returns this
 */
proto.sro.character.CharacterTarget.prototype.setId = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.sro.character.CharacterTarget.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.sro.character.CharacterTarget} returns this
 */
proto.sro.character.CharacterTarget.prototype.clearId = function() {
  return jspb.Message.setOneofField(this, 1, proto.sro.character.CharacterTarget.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sro.character.CharacterTarget.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.sro.character.CharacterTarget.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sro.character.CharacterTarget} returns this
 */
proto.sro.character.CharacterTarget.prototype.setName = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.sro.character.CharacterTarget.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.sro.character.CharacterTarget} returns this
 */
proto.sro.character.CharacterTarget.prototype.clearName = function() {
  return jspb.Message.setOneofField(this, 2, proto.sro.character.CharacterTarget.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sro.character.CharacterTarget.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sro.character.EditCharacterRequest.oneofGroups_ = [[3],[4],[5],[6],[7],[8],[9]];

/**
 * @enum {number}
 */
proto.sro.character.EditCharacterRequest.OptionalOwnerIdCase = {
  OPTIONAL_OWNER_ID_NOT_SET: 0,
  OWNER_ID: 3
};

/**
 * @return {proto.sro.character.EditCharacterRequest.OptionalOwnerIdCase}
 */
proto.sro.character.EditCharacterRequest.prototype.getOptionalOwnerIdCase = function() {
  return /** @type {proto.sro.character.EditCharacterRequest.OptionalOwnerIdCase} */(jspb.Message.computeOneofCase(this, proto.sro.character.EditCharacterRequest.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.sro.character.EditCharacterRequest.OptionalNewNameCase = {
  OPTIONAL_NEW_NAME_NOT_SET: 0,
  NEW_NAME: 4
};

/**
 * @return {proto.sro.character.EditCharacterRequest.OptionalNewNameCase}
 */
proto.sro.character.EditCharacterRequest.prototype.getOptionalNewNameCase = function() {
  return /** @type {proto.sro.character.EditCharacterRequest.OptionalNewNameCase} */(jspb.Message.computeOneofCase(this, proto.sro.character.EditCharacterRequest.oneofGroups_[1]));
};

/**
 * @enum {number}
 */
proto.sro.character.EditCharacterRequest.OptionalGenderCase = {
  OPTIONAL_GENDER_NOT_SET: 0,
  GENDER: 5
};

/**
 * @return {proto.sro.character.EditCharacterRequest.OptionalGenderCase}
 */
proto.sro.character.EditCharacterRequest.prototype.getOptionalGenderCase = function() {
  return /** @type {proto.sro.character.EditCharacterRequest.OptionalGenderCase} */(jspb.Message.computeOneofCase(this, proto.sro.character.EditCharacterRequest.oneofGroups_[2]));
};

/**
 * @enum {number}
 */
proto.sro.character.EditCharacterRequest.OptionalRealmCase = {
  OPTIONAL_REALM_NOT_SET: 0,
  REALM: 6
};

/**
 * @return {proto.sro.character.EditCharacterRequest.OptionalRealmCase}
 */
proto.sro.character.EditCharacterRequest.prototype.getOptionalRealmCase = function() {
  return /** @type {proto.sro.character.EditCharacterRequest.OptionalRealmCase} */(jspb.Message.computeOneofCase(this, proto.sro.character.EditCharacterRequest.oneofGroups_[3]));
};

/**
 * @enum {number}
 */
proto.sro.character.EditCharacterRequest.OptionalPlayTimeCase = {
  OPTIONAL_PLAY_TIME_NOT_SET: 0,
  PLAY_TIME: 7
};

/**
 * @return {proto.sro.character.EditCharacterRequest.OptionalPlayTimeCase}
 */
proto.sro.character.EditCharacterRequest.prototype.getOptionalPlayTimeCase = function() {
  return /** @type {proto.sro.character.EditCharacterRequest.OptionalPlayTimeCase} */(jspb.Message.computeOneofCase(this, proto.sro.character.EditCharacterRequest.oneofGroups_[4]));
};

/**
 * @enum {number}
 */
proto.sro.character.EditCharacterRequest.OptionalLocationCase = {
  OPTIONAL_LOCATION_NOT_SET: 0,
  LOCATION: 8
};

/**
 * @return {proto.sro.character.EditCharacterRequest.OptionalLocationCase}
 */
proto.sro.character.EditCharacterRequest.prototype.getOptionalLocationCase = function() {
  return /** @type {proto.sro.character.EditCharacterRequest.OptionalLocationCase} */(jspb.Message.computeOneofCase(this, proto.sro.character.EditCharacterRequest.oneofGroups_[5]));
};

/**
 * @enum {number}
 */
proto.sro.character.EditCharacterRequest.OptionalDimensionCase = {
  OPTIONAL_DIMENSION_NOT_SET: 0,
  DIMENSION: 9
};

/**
 * @return {proto.sro.character.EditCharacterRequest.OptionalDimensionCase}
 */
proto.sro.character.EditCharacterRequest.prototype.getOptionalDimensionCase = function() {
  return /** @type {proto.sro.character.EditCharacterRequest.OptionalDimensionCase} */(jspb.Message.computeOneofCase(this, proto.sro.character.EditCharacterRequest.oneofGroups_[6]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sro.character.EditCharacterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sro.character.EditCharacterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sro.character.EditCharacterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.EditCharacterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    target: (f = msg.getTarget()) && proto.sro.character.CharacterTarget.toObject(includeInstance, f),
    ownerId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    newName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 5, ""),
    realm: jspb.Message.getFieldWithDefault(msg, 6, ""),
    playTime: jspb.Message.getFieldWithDefault(msg, 7, 0),
    location: (f = msg.getLocation()) && sro_globals_pb.Location.toObject(includeInstance, f),
    dimension: (f = msg.getDimension()) && sro_gamebackend_servermanager_pb.DimensionTarget.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sro.character.EditCharacterRequest}
 */
proto.sro.character.EditCharacterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sro.character.EditCharacterRequest;
  return proto.sro.character.EditCharacterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sro.character.EditCharacterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sro.character.EditCharacterRequest}
 */
proto.sro.character.EditCharacterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sro.character.CharacterTarget;
      reader.readMessage(value,proto.sro.character.CharacterTarget.deserializeBinaryFromReader);
      msg.setTarget(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setGender(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRealm(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPlayTime(value);
      break;
    case 8:
      var value = new sro_globals_pb.Location;
      reader.readMessage(value,sro_globals_pb.Location.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 9:
      var value = new sro_gamebackend_servermanager_pb.DimensionTarget;
      reader.readMessage(value,sro_gamebackend_servermanager_pb.DimensionTarget.deserializeBinaryFromReader);
      msg.setDimension(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sro.character.EditCharacterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sro.character.EditCharacterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sro.character.EditCharacterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.EditCharacterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTarget();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sro.character.CharacterTarget.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      sro_globals_pb.Location.serializeBinaryToWriter
    );
  }
  f = message.getDimension();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      sro_gamebackend_servermanager_pb.DimensionTarget.serializeBinaryToWriter
    );
  }
};


/**
 * optional CharacterTarget target = 1;
 * @return {?proto.sro.character.CharacterTarget}
 */
proto.sro.character.EditCharacterRequest.prototype.getTarget = function() {
  return /** @type{?proto.sro.character.CharacterTarget} */ (
    jspb.Message.getWrapperField(this, proto.sro.character.CharacterTarget, 1));
};


/**
 * @param {?proto.sro.character.CharacterTarget|undefined} value
 * @return {!proto.sro.character.EditCharacterRequest} returns this
*/
proto.sro.character.EditCharacterRequest.prototype.setTarget = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sro.character.EditCharacterRequest} returns this
 */
proto.sro.character.EditCharacterRequest.prototype.clearTarget = function() {
  return this.setTarget(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sro.character.EditCharacterRequest.prototype.hasTarget = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string owner_id = 3;
 * @return {string}
 */
proto.sro.character.EditCharacterRequest.prototype.getOwnerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sro.character.EditCharacterRequest} returns this
 */
proto.sro.character.EditCharacterRequest.prototype.setOwnerId = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.sro.character.EditCharacterRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.sro.character.EditCharacterRequest} returns this
 */
proto.sro.character.EditCharacterRequest.prototype.clearOwnerId = function() {
  return jspb.Message.setOneofField(this, 3, proto.sro.character.EditCharacterRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sro.character.EditCharacterRequest.prototype.hasOwnerId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string new_name = 4;
 * @return {string}
 */
proto.sro.character.EditCharacterRequest.prototype.getNewName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sro.character.EditCharacterRequest} returns this
 */
proto.sro.character.EditCharacterRequest.prototype.setNewName = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.sro.character.EditCharacterRequest.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.sro.character.EditCharacterRequest} returns this
 */
proto.sro.character.EditCharacterRequest.prototype.clearNewName = function() {
  return jspb.Message.setOneofField(this, 4, proto.sro.character.EditCharacterRequest.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sro.character.EditCharacterRequest.prototype.hasNewName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string gender = 5;
 * @return {string}
 */
proto.sro.character.EditCharacterRequest.prototype.getGender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sro.character.EditCharacterRequest} returns this
 */
proto.sro.character.EditCharacterRequest.prototype.setGender = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.sro.character.EditCharacterRequest.oneofGroups_[2], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.sro.character.EditCharacterRequest} returns this
 */
proto.sro.character.EditCharacterRequest.prototype.clearGender = function() {
  return jspb.Message.setOneofField(this, 5, proto.sro.character.EditCharacterRequest.oneofGroups_[2], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sro.character.EditCharacterRequest.prototype.hasGender = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string realm = 6;
 * @return {string}
 */
proto.sro.character.EditCharacterRequest.prototype.getRealm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sro.character.EditCharacterRequest} returns this
 */
proto.sro.character.EditCharacterRequest.prototype.setRealm = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.sro.character.EditCharacterRequest.oneofGroups_[3], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.sro.character.EditCharacterRequest} returns this
 */
proto.sro.character.EditCharacterRequest.prototype.clearRealm = function() {
  return jspb.Message.setOneofField(this, 6, proto.sro.character.EditCharacterRequest.oneofGroups_[3], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sro.character.EditCharacterRequest.prototype.hasRealm = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 play_time = 7;
 * @return {number}
 */
proto.sro.character.EditCharacterRequest.prototype.getPlayTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.sro.character.EditCharacterRequest} returns this
 */
proto.sro.character.EditCharacterRequest.prototype.setPlayTime = function(value) {
  return jspb.Message.setOneofField(this, 7, proto.sro.character.EditCharacterRequest.oneofGroups_[4], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.sro.character.EditCharacterRequest} returns this
 */
proto.sro.character.EditCharacterRequest.prototype.clearPlayTime = function() {
  return jspb.Message.setOneofField(this, 7, proto.sro.character.EditCharacterRequest.oneofGroups_[4], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sro.character.EditCharacterRequest.prototype.hasPlayTime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional sro.Location location = 8;
 * @return {?proto.sro.Location}
 */
proto.sro.character.EditCharacterRequest.prototype.getLocation = function() {
  return /** @type{?proto.sro.Location} */ (
    jspb.Message.getWrapperField(this, sro_globals_pb.Location, 8));
};


/**
 * @param {?proto.sro.Location|undefined} value
 * @return {!proto.sro.character.EditCharacterRequest} returns this
*/
proto.sro.character.EditCharacterRequest.prototype.setLocation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.sro.character.EditCharacterRequest.oneofGroups_[5], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sro.character.EditCharacterRequest} returns this
 */
proto.sro.character.EditCharacterRequest.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sro.character.EditCharacterRequest.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional sro.gamebackend.DimensionTarget dimension = 9;
 * @return {?proto.sro.gamebackend.DimensionTarget}
 */
proto.sro.character.EditCharacterRequest.prototype.getDimension = function() {
  return /** @type{?proto.sro.gamebackend.DimensionTarget} */ (
    jspb.Message.getWrapperField(this, sro_gamebackend_servermanager_pb.DimensionTarget, 9));
};


/**
 * @param {?proto.sro.gamebackend.DimensionTarget|undefined} value
 * @return {!proto.sro.character.EditCharacterRequest} returns this
*/
proto.sro.character.EditCharacterRequest.prototype.setDimension = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.sro.character.EditCharacterRequest.oneofGroups_[6], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sro.character.EditCharacterRequest} returns this
 */
proto.sro.character.EditCharacterRequest.prototype.clearDimension = function() {
  return this.setDimension(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sro.character.EditCharacterRequest.prototype.hasDimension = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sro.character.CharacterDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.sro.character.CharacterDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sro.character.CharacterDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.CharacterDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    owner: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 4, ""),
    realm: jspb.Message.getFieldWithDefault(msg, 5, ""),
    playTime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    location: (f = msg.getLocation()) && sro_globals_pb.Location.toObject(includeInstance, f),
    dimension: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sro.character.CharacterDetails}
 */
proto.sro.character.CharacterDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sro.character.CharacterDetails;
  return proto.sro.character.CharacterDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sro.character.CharacterDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sro.character.CharacterDetails}
 */
proto.sro.character.CharacterDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setGender(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRealm(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPlayTime(value);
      break;
    case 8:
      var value = new sro_globals_pb.Location;
      reader.readMessage(value,sro_globals_pb.Location.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDimension(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sro.character.CharacterDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sro.character.CharacterDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sro.character.CharacterDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.CharacterDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getGender();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRealm();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPlayTime();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      sro_globals_pb.Location.serializeBinaryToWriter
    );
  }
  f = message.getDimension();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.sro.character.CharacterDetails.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sro.character.CharacterDetails} returns this
 */
proto.sro.character.CharacterDetails.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string owner = 2;
 * @return {string}
 */
proto.sro.character.CharacterDetails.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sro.character.CharacterDetails} returns this
 */
proto.sro.character.CharacterDetails.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.sro.character.CharacterDetails.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sro.character.CharacterDetails} returns this
 */
proto.sro.character.CharacterDetails.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string gender = 4;
 * @return {string}
 */
proto.sro.character.CharacterDetails.prototype.getGender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sro.character.CharacterDetails} returns this
 */
proto.sro.character.CharacterDetails.prototype.setGender = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string realm = 5;
 * @return {string}
 */
proto.sro.character.CharacterDetails.prototype.getRealm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sro.character.CharacterDetails} returns this
 */
proto.sro.character.CharacterDetails.prototype.setRealm = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint64 play_time = 6;
 * @return {number}
 */
proto.sro.character.CharacterDetails.prototype.getPlayTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.sro.character.CharacterDetails} returns this
 */
proto.sro.character.CharacterDetails.prototype.setPlayTime = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional sro.Location location = 8;
 * @return {?proto.sro.Location}
 */
proto.sro.character.CharacterDetails.prototype.getLocation = function() {
  return /** @type{?proto.sro.Location} */ (
    jspb.Message.getWrapperField(this, sro_globals_pb.Location, 8));
};


/**
 * @param {?proto.sro.Location|undefined} value
 * @return {!proto.sro.character.CharacterDetails} returns this
*/
proto.sro.character.CharacterDetails.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sro.character.CharacterDetails} returns this
 */
proto.sro.character.CharacterDetails.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sro.character.CharacterDetails.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string dimension = 9;
 * @return {string}
 */
proto.sro.character.CharacterDetails.prototype.getDimension = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.sro.character.CharacterDetails} returns this
 */
proto.sro.character.CharacterDetails.prototype.setDimension = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sro.character.CharactersDetails.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sro.character.CharactersDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.sro.character.CharactersDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sro.character.CharactersDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.CharactersDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    charactersList: jspb.Message.toObjectList(msg.getCharactersList(),
    proto.sro.character.CharacterDetails.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sro.character.CharactersDetails}
 */
proto.sro.character.CharactersDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sro.character.CharactersDetails;
  return proto.sro.character.CharactersDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sro.character.CharactersDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sro.character.CharactersDetails}
 */
proto.sro.character.CharactersDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sro.character.CharacterDetails;
      reader.readMessage(value,proto.sro.character.CharacterDetails.deserializeBinaryFromReader);
      msg.addCharacters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sro.character.CharactersDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sro.character.CharactersDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sro.character.CharactersDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.CharactersDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCharactersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sro.character.CharacterDetails.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CharacterDetails characters = 1;
 * @return {!Array<!proto.sro.character.CharacterDetails>}
 */
proto.sro.character.CharactersDetails.prototype.getCharactersList = function() {
  return /** @type{!Array<!proto.sro.character.CharacterDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sro.character.CharacterDetails, 1));
};


/**
 * @param {!Array<!proto.sro.character.CharacterDetails>} value
 * @return {!proto.sro.character.CharactersDetails} returns this
*/
proto.sro.character.CharactersDetails.prototype.setCharactersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sro.character.CharacterDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sro.character.CharacterDetails}
 */
proto.sro.character.CharactersDetails.prototype.addCharacters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sro.character.CharacterDetails, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sro.character.CharactersDetails} returns this
 */
proto.sro.character.CharactersDetails.prototype.clearCharactersList = function() {
  return this.setCharactersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sro.character.InventoryItem.prototype.toObject = function(opt_includeInstance) {
  return proto.sro.character.InventoryItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sro.character.InventoryItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.InventoryItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    slot: jspb.Message.getFieldWithDefault(msg, 2, 0),
    quantity: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sro.character.InventoryItem}
 */
proto.sro.character.InventoryItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sro.character.InventoryItem;
  return proto.sro.character.InventoryItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sro.character.InventoryItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sro.character.InventoryItem}
 */
proto.sro.character.InventoryItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSlot(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sro.character.InventoryItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sro.character.InventoryItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sro.character.InventoryItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.InventoryItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSlot();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.sro.character.InventoryItem.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sro.character.InventoryItem} returns this
 */
proto.sro.character.InventoryItem.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 slot = 2;
 * @return {number}
 */
proto.sro.character.InventoryItem.prototype.getSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sro.character.InventoryItem} returns this
 */
proto.sro.character.InventoryItem.prototype.setSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 quantity = 3;
 * @return {number}
 */
proto.sro.character.InventoryItem.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sro.character.InventoryItem} returns this
 */
proto.sro.character.InventoryItem.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sro.character.Inventory.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sro.character.Inventory.prototype.toObject = function(opt_includeInstance) {
  return proto.sro.character.Inventory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sro.character.Inventory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.Inventory.toObject = function(includeInstance, msg) {
  var f, obj = {
    inventoryItemsList: jspb.Message.toObjectList(msg.getInventoryItemsList(),
    proto.sro.character.InventoryItem.toObject, includeInstance),
    bankItemsList: jspb.Message.toObjectList(msg.getBankItemsList(),
    proto.sro.character.InventoryItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sro.character.Inventory}
 */
proto.sro.character.Inventory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sro.character.Inventory;
  return proto.sro.character.Inventory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sro.character.Inventory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sro.character.Inventory}
 */
proto.sro.character.Inventory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sro.character.InventoryItem;
      reader.readMessage(value,proto.sro.character.InventoryItem.deserializeBinaryFromReader);
      msg.addInventoryItems(value);
      break;
    case 2:
      var value = new proto.sro.character.InventoryItem;
      reader.readMessage(value,proto.sro.character.InventoryItem.deserializeBinaryFromReader);
      msg.addBankItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sro.character.Inventory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sro.character.Inventory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sro.character.Inventory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.Inventory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInventoryItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sro.character.InventoryItem.serializeBinaryToWriter
    );
  }
  f = message.getBankItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sro.character.InventoryItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InventoryItem inventory_items = 1;
 * @return {!Array<!proto.sro.character.InventoryItem>}
 */
proto.sro.character.Inventory.prototype.getInventoryItemsList = function() {
  return /** @type{!Array<!proto.sro.character.InventoryItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sro.character.InventoryItem, 1));
};


/**
 * @param {!Array<!proto.sro.character.InventoryItem>} value
 * @return {!proto.sro.character.Inventory} returns this
*/
proto.sro.character.Inventory.prototype.setInventoryItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sro.character.InventoryItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sro.character.InventoryItem}
 */
proto.sro.character.Inventory.prototype.addInventoryItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sro.character.InventoryItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sro.character.Inventory} returns this
 */
proto.sro.character.Inventory.prototype.clearInventoryItemsList = function() {
  return this.setInventoryItemsList([]);
};


/**
 * repeated InventoryItem bank_items = 2;
 * @return {!Array<!proto.sro.character.InventoryItem>}
 */
proto.sro.character.Inventory.prototype.getBankItemsList = function() {
  return /** @type{!Array<!proto.sro.character.InventoryItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sro.character.InventoryItem, 2));
};


/**
 * @param {!Array<!proto.sro.character.InventoryItem>} value
 * @return {!proto.sro.character.Inventory} returns this
*/
proto.sro.character.Inventory.prototype.setBankItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sro.character.InventoryItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sro.character.InventoryItem}
 */
proto.sro.character.Inventory.prototype.addBankItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sro.character.InventoryItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sro.character.Inventory} returns this
 */
proto.sro.character.Inventory.prototype.clearBankItemsList = function() {
  return this.setBankItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sro.character.UpdateInventoryRequest.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sro.character.UpdateInventoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sro.character.UpdateInventoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sro.character.UpdateInventoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.UpdateInventoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    target: (f = msg.getTarget()) && proto.sro.character.CharacterTarget.toObject(includeInstance, f),
    inventoryItemsList: jspb.Message.toObjectList(msg.getInventoryItemsList(),
    proto.sro.character.InventoryItem.toObject, includeInstance),
    bankItemsList: jspb.Message.toObjectList(msg.getBankItemsList(),
    proto.sro.character.InventoryItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sro.character.UpdateInventoryRequest}
 */
proto.sro.character.UpdateInventoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sro.character.UpdateInventoryRequest;
  return proto.sro.character.UpdateInventoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sro.character.UpdateInventoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sro.character.UpdateInventoryRequest}
 */
proto.sro.character.UpdateInventoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sro.character.CharacterTarget;
      reader.readMessage(value,proto.sro.character.CharacterTarget.deserializeBinaryFromReader);
      msg.setTarget(value);
      break;
    case 2:
      var value = new proto.sro.character.InventoryItem;
      reader.readMessage(value,proto.sro.character.InventoryItem.deserializeBinaryFromReader);
      msg.addInventoryItems(value);
      break;
    case 3:
      var value = new proto.sro.character.InventoryItem;
      reader.readMessage(value,proto.sro.character.InventoryItem.deserializeBinaryFromReader);
      msg.addBankItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sro.character.UpdateInventoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sro.character.UpdateInventoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sro.character.UpdateInventoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sro.character.UpdateInventoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTarget();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sro.character.CharacterTarget.serializeBinaryToWriter
    );
  }
  f = message.getInventoryItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sro.character.InventoryItem.serializeBinaryToWriter
    );
  }
  f = message.getBankItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.sro.character.InventoryItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional CharacterTarget target = 1;
 * @return {?proto.sro.character.CharacterTarget}
 */
proto.sro.character.UpdateInventoryRequest.prototype.getTarget = function() {
  return /** @type{?proto.sro.character.CharacterTarget} */ (
    jspb.Message.getWrapperField(this, proto.sro.character.CharacterTarget, 1));
};


/**
 * @param {?proto.sro.character.CharacterTarget|undefined} value
 * @return {!proto.sro.character.UpdateInventoryRequest} returns this
*/
proto.sro.character.UpdateInventoryRequest.prototype.setTarget = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sro.character.UpdateInventoryRequest} returns this
 */
proto.sro.character.UpdateInventoryRequest.prototype.clearTarget = function() {
  return this.setTarget(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sro.character.UpdateInventoryRequest.prototype.hasTarget = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated InventoryItem inventory_items = 2;
 * @return {!Array<!proto.sro.character.InventoryItem>}
 */
proto.sro.character.UpdateInventoryRequest.prototype.getInventoryItemsList = function() {
  return /** @type{!Array<!proto.sro.character.InventoryItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sro.character.InventoryItem, 2));
};


/**
 * @param {!Array<!proto.sro.character.InventoryItem>} value
 * @return {!proto.sro.character.UpdateInventoryRequest} returns this
*/
proto.sro.character.UpdateInventoryRequest.prototype.setInventoryItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sro.character.InventoryItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sro.character.InventoryItem}
 */
proto.sro.character.UpdateInventoryRequest.prototype.addInventoryItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sro.character.InventoryItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sro.character.UpdateInventoryRequest} returns this
 */
proto.sro.character.UpdateInventoryRequest.prototype.clearInventoryItemsList = function() {
  return this.setInventoryItemsList([]);
};


/**
 * repeated InventoryItem bank_items = 3;
 * @return {!Array<!proto.sro.character.InventoryItem>}
 */
proto.sro.character.UpdateInventoryRequest.prototype.getBankItemsList = function() {
  return /** @type{!Array<!proto.sro.character.InventoryItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sro.character.InventoryItem, 3));
};


/**
 * @param {!Array<!proto.sro.character.InventoryItem>} value
 * @return {!proto.sro.character.UpdateInventoryRequest} returns this
*/
proto.sro.character.UpdateInventoryRequest.prototype.setBankItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sro.character.InventoryItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sro.character.InventoryItem}
 */
proto.sro.character.UpdateInventoryRequest.prototype.addBankItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sro.character.InventoryItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sro.character.UpdateInventoryRequest} returns this
 */
proto.sro.character.UpdateInventoryRequest.prototype.clearBankItemsList = function() {
  return this.setBankItemsList([]);
};


goog.object.extend(exports, proto.sro.character);
